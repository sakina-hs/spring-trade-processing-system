spring.application.name=risk-service

server.port=8089


# Kafka Config
spring.kafka.bootstrap-servers=kafka:9092

# Topic Name
spring.kafka.template.default-topic=trade-events


spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

# Consumer Configuration
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.group-id=risk-service-group

# Retry Configuration
spring.kafka.listener.poll-timeout=3000
spring.kafka.listener.concurrency=1

# Error Handling and Retry Configuration
spring.kafka.consumer.properties.spring.json.value.default.type=com.goldman.risk_service.model.TradeEvent


spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.properties.schema.registry.url=http://schema-registry:8085

spring.kafka.consumer.properties.specific.avro.reader=true


# Logging for Kafka
logging.level.org.apache.kafka=INFO
logging.level.org.springframework.kafka=INFO


# Error Handling
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.session.timeout.ms=45000
spring.kafka.consumer.properties.heartbeat.interval.ms=3000
spring.kafka.consumer.properties.max.poll.records=500

# Add these correct retry properties
spring.kafka.consumer.properties.retry.backoff.ms=1000
spring.kafka.consumer.properties.max.poll.interval.ms=300000
spring.kafka.consumer.properties.request.timeout.ms=30000
spring.kafka.listener.type=BATCH
spring.kafka.listener.idle-between-polls=5000

# Settlement Service Configuration
settlement.service.url=http://settlement-service:8088
# Springdoc OpenAPI Configuration
springdoc.api-docs.path=/risk-docs
springdoc.swagger-ui.path=/risk-swagger

# Schema Registry

management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=risk-service
management.tracing.sampling.probability=1.0


loki.url=http://loki:3100/loki/api/v1/push