spring.application.name=trade-service
server.port=8090

# Kafka Configuration
spring.kafka.bootstrap-servers=kafka:9092


spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://postgres:5432/tradeDB

spring.datasource.username=postgres
spring.datasource.password=Qushus@0304


spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Producer Configuration

spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.group-id=trade-service-group
spring.kafka.consumer.auto-offset-reset=earliest

# Retry Configuration
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.properties.max.poll.interval.ms=300000
spring.kafka.listener.poll-timeout=3000
spring.kafka.listener.concurrency=1

# Topic Name
spring.kafka.template.default-topic=trade-events

# Logging configuration
logging.level.com.goldman=DEBUG
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n


springdoc.api-docs.path=/trade-docs
springdoc.swagger-ui.path=/trade-swagger

# Schema Registry
spring.kafka.properties.schema.registry.url=http://schema-registry:8081
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.specific.avro.reader=true

management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=trade-service
management.tracing.sampling.probability=1.0

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always



loki.url=http://loki:3100/loki/api/v1/push


spring.zipkin.base-url=http://tempo:9411
spring.zipkin.enabled=true
spring.sleuth.sampler.probability=1.0




